{"version":3,"file":"comment-plugin.min.js","sources":["../src/draggable.js","../src/comment.js","../src/utils.js","../src/frame-comment.js","../src/inline-comment.js","../src/manager.js","../src/index.js"],"sourcesContent":["export default class Draggable {\r\n\r\n    constructor(el, onStart = () => {}, onTranslate = () => {}, onDrag = () => {}) {\r\n        this.mouseStart = null;\r\n\r\n        this.el = el;\r\n        this.onStart = onStart;\r\n        this.onTranslate = onTranslate;\r\n        this.onDrag = onDrag;\r\n\r\n        this.initEvents(el);\r\n    }\r\n\r\n    initEvents(el) {\r\n        el.addEventListener('pointerdown', this.down.bind(this));\r\n\r\n        const windowListenGuard = (type, listener) => {\r\n            window.addEventListener(type, listener);\r\n            return () => window.removeEventListener(type, listener);\r\n        };\r\n\r\n        this.onDestroy = [\r\n            windowListenGuard('pointermove', this.move.bind(this)),\r\n            windowListenGuard('pointerup', this.up.bind(this))\r\n        ];\r\n    }\r\n\r\n    getCoords(e) {\r\n        const props = e.touches ? e.touches[0] : e;\r\n\r\n        return [props.pageX, props.pageY];\r\n    }\r\n\r\n    down(e) {\r\n        e.stopPropagation();\r\n        this.mouseStart = this.getCoords(e);\r\n\r\n        this.onStart();\r\n    }\r\n\r\n    move(e) {\r\n        if (!this.mouseStart) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let [x, y] = this.getCoords(e);\r\n        let delta = [x - this.mouseStart[0], y - this.mouseStart[1]];\r\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\r\n\r\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom);\r\n    }\r\n\r\n    up() {\r\n        if (this.mouseStart) {\r\n            this.onDrag();\r\n        }\r\n\r\n        this.mouseStart = null;\r\n    }\r\n\r\n    destroy() {\r\n        this.onDestroy.forEach(cb => cb());\r\n    }\r\n}","import Draggable from './draggable';\r\n\r\nexport default class Comment {\r\n    constructor(text, editor) {\r\n        this.editor = editor;\r\n        this.text = text;\r\n        this.scale = 1;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.dragPosition = [0, 0];\r\n        this.links = [];\r\n \r\n        this.initView();\r\n        this.update();\r\n    }\r\n\r\n    initView() {\r\n        this.el = document.createElement('div');\r\n        this.el.tabIndex = 1;\r\n        this.el.addEventListener('contextmenu', this.onContextMenu.bind(this));\r\n        this.el.addEventListener('focus', this.onFocus.bind(this));\r\n        this.el.addEventListener('blur', this.onBlur.bind(this));\r\n    \r\n        this.draggable = new Draggable(\r\n            this.el, () => this.onStart(), (dx, dy) => this.onTranslate(dx, dy));\r\n    }\r\n\r\n    linkTo(ids) {\r\n        this.links = ids || [];\r\n    }\r\n\r\n    linkedTo(node) {\r\n        return this.links.includes(node.id);\r\n    }\r\n\r\n    k() {\r\n        return 1;\r\n    }\r\n\r\n    onContextMenu(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.editor.trigger('editcomment', this);\r\n    }\r\n\r\n    onFocus() {\r\n        this.scale = Math.max(1, 1 / this.k());\r\n        this.update();\r\n        this.editor.trigger('commentselected', this)\r\n    }\r\n\r\n    focused() {\r\n        return document.activeElement === this.el;\r\n    }\r\n\r\n    onBlur() {\r\n        this.scale = 1;\r\n        this.update()\r\n    }\r\n\r\n    blur() {\r\n        this.el.blur();\r\n    }\r\n\r\n    onStart() {\r\n        this.dragPosition = [this.x, this.y];\r\n    }\r\n\r\n    onTranslate (dx, dy) {\r\n        const [x, y] = this.dragPosition;\r\n\r\n        this.x = x + this.scale * dx;\r\n        this.y = y + this.scale * dy;\r\n        \r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.el.innerText = this.text;\r\n        this.el.style.transform = `translate(${this.x}px, ${this.y}px) scale(${this.scale})`;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            text: this.text,\r\n            position: [ this.x, this.y ],\r\n            links: this.links\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.draggable.destroy();\r\n    }\r\n}","const min = (arr) => arr.length === 0 ? 0 : Math.min(...arr);\r\nconst max = (arr) => arr.length === 0 ? 0 : Math.max(...arr);\r\n\r\nexport function intersectRect(r1, r2) {\r\n    return !(\r\n        r2.left > r1.right || \r\n        r2.right < r1.left || \r\n        r2.top > r1.bottom ||\r\n        r2.bottom < r1.top\r\n    );\r\n}\r\n\r\nexport function containsRect(r1, r2) {\r\n    return (\r\n        r2.left > r1.left && \r\n        r2.right < r1.right && \r\n        r2.top > r1.top &&\r\n        r2.bottom < r1.bottom\r\n    );\r\n}\r\n\r\nexport function nodesBBox(editor, nodes, margin) {\r\n    const left = min(nodes.map(node => node.position[0])) - margin;\r\n    const top = min(nodes.map(node => node.position[1])) - margin;\r\n    const right = max(nodes.map(node => node.position[0] + editor.view.nodes.get(node).el.clientWidth)) + 2 * margin;\r\n    const bottom = max(nodes.map(node => node.position[1] + editor.view.nodes.get(node).el.clientHeight)) + 2 * margin;\r\n    \r\n    return {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n        width: Math.abs(left - right),\r\n        height: Math.abs(top - bottom),\r\n        getCenter: () => {\r\n            return [\r\n                (left + right) / 2,\r\n                (top + bottom) / 2\r\n            ];\r\n        }\r\n    };\r\n}","import Comment from './comment';\r\nimport { containsRect } from './utils';\r\n\r\nexport default class FrameComment extends Comment {\r\n    constructor(text, editor) {\r\n        super(text, editor);\r\n        \r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.links = [];\r\n        this.el.className = 'frame-comment';\r\n    }\r\n\r\n    linkedNodesView() {\r\n        return this.links\r\n            .map(id => this.editor.nodes.find(n => n.id === id))\r\n            .map(node => this.editor.view.nodes.get(node));\r\n    }\r\n\r\n    onStart() {\r\n        super.onStart();\r\n        this.linkedNodesView().map(nodeView => nodeView.onStart())\r\n    }\r\n\r\n    onTranslate(dx, dy) {\r\n        super.onTranslate(dx, dy);\r\n        this.linkedNodesView().map(nodeView => nodeView.onDrag(dx, dy))\r\n    }\r\n\r\n    isContains(node) {\r\n        const commRect = this.el.getBoundingClientRect();\r\n        const view = this.editor.view.nodes.get(node);\r\n    \r\n        return containsRect(commRect, view.el.getBoundingClientRect());\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n\r\n        this.el.style.width = this.width+'px';\r\n        this.el.style.height = this.height+'px';\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            type: 'frame',\r\n            width: this.width,\r\n            height: this.height\r\n        }\r\n    }\r\n}","import Comment from './comment';\r\nimport { intersectRect } from './utils';\r\n\r\nexport default class InlineComment extends Comment {\r\n    constructor(text, editor) {\r\n        super(text, editor);\r\n        \r\n        this.el.className = 'inline-comment';\r\n        this.el.addEventListener('mouseup', this.onDrag.bind(this));\r\n    }\r\n\r\n    onDrag() {\r\n        const intersection = this.getIntersectNode();\r\n\r\n        this.linkTo(intersection ? [intersection.node.id] : []);\r\n    }\r\n\r\n    getIntersectNode() {\r\n        const commRect = this.el.getBoundingClientRect();\r\n\r\n        return Array.from(this.editor.view.nodes)\r\n            .map(([node, view]) => {\r\n                return { node, rect: view.el.getBoundingClientRect() };\r\n            })\r\n            .find(({ rect }) => {\r\n                return intersectRect(commRect, rect);\r\n            });\r\n    }\r\n\r\n    offset(dx, dy) {\r\n        this.x += dx;\r\n        this.y += dy;\r\n        this.update();\r\n    } \r\n\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            type: 'inline'\r\n        }\r\n    }\r\n}","import FrameComment from './frame-comment';\r\nimport InlineComment from './inline-comment';\r\n\r\nexport default class CommentManager {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this.comments = [];\r\n\r\n        editor.on('zoomed', () => {\r\n            this.comments.map(c => c.blur.call(c));\r\n        });\r\n    }\r\n\r\n    addInlineComment(text, [ x, y ], links = []) {\r\n        let comment = new InlineComment(text, this.editor);\r\n\r\n        comment.k = () => this.editor.view.area.transform.k;\r\n        comment.x = x;\r\n        comment.y = y;\r\n        comment.linkTo(links);\r\n\r\n        this.addComment(comment);\r\n    }\r\n\r\n    addFrameComment(text, [ x, y ], links = [], width = 0, height = 0) {\r\n        let comment = new FrameComment(text, this.editor);\r\n\r\n        comment.x = x;\r\n        comment.y = y;\r\n        comment.width = width;\r\n        comment.height = height;\r\n        comment.linkTo(links);\r\n        \r\n        this.addComment(comment);\r\n    }\r\n\r\n    addComment(comment) {\r\n        comment.update();\r\n        this.comments.push(comment);\r\n\r\n        this.editor.view.area.appendChild(comment.el);\r\n        this.editor.trigger('commentcreated', comment);\r\n    }\r\n\r\n    deleteComment(comment) {\r\n        this.editor.view.area.removeChild(comment.el);\r\n        this.comments.splice(this.comments.indexOf(comment), 1);\r\n        comment.destroy();\r\n\r\n        this.editor.trigger('commentremoved', comment);\r\n    }\r\n\r\n    deleteFocusedComment() {\r\n        const focused = this.comments.find(c => c.focused());\r\n        \r\n        if (focused)\r\n            this.deleteComment(focused)\r\n    }\r\n\r\n    deleteComments() {\r\n        [...this.comments].map(c => this.deleteComment(c));\r\n    }\r\n\r\n    toJSON() {\r\n        return this.comments.map(c => c.toJSON())\r\n    }\r\n\r\n    fromJSON(list) {\r\n        this.deleteComments();\r\n        list.map(item => {\r\n            if (item.type === 'frame') {\r\n                this.addFrameComment(item.text, item.position, item.links, item.width, item.height)\r\n            } else {\r\n                this.addInlineComment(item.text, item.position, item.links);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.comments.forEach(comment => comment.destroy());\r\n    }\r\n}","import './style.sass';\r\nimport CommentManager from './manager';\r\nimport FrameComment from './frame-comment';\r\nimport InlineComment from './inline-comment';\r\nimport { nodesBBox } from './utils';\r\n\r\n// eslint-disable-next-line max-statements\r\nfunction install(editor, { margin = 30, disableBuiltInEdit = false }) {\r\n    editor.bind('commentselected');\r\n    editor.bind('commentcreated');\r\n    editor.bind('commentremoved');\r\n    editor.bind('syncframes');\r\n    editor.bind('addcomment');\r\n    editor.bind('removecomment');\r\n    editor.bind('editcomment');\r\n\r\n    const manager = new CommentManager(editor);\r\n\r\n    if (!disableBuiltInEdit) { \r\n        editor.on('editcomment', (comment) => {\r\n            comment.text = prompt('Edit comment', comment.text)\r\n            comment.update();\r\n        });\r\n    }\r\n\r\n    function handleKey(e) {\r\n        if (e.code === 'KeyF' && e.shiftKey) {\r\n            const ids = editor.selected.list.map(node => node.id);\r\n            const nodes = ids.map(id => editor.nodes.find(n => n.id === id));\r\n    \r\n            editor.trigger('addcomment', ({ type: 'frame', nodes }))\r\n        } else if (e.code === 'KeyC' && e.shiftKey) {\r\n            const position = Object.values(editor.view.area.mouse);\r\n\r\n            editor.trigger('addcomment', ({ type: 'inline', position }))\r\n        } else if (e.code === 'Delete') {\r\n            manager.deleteFocusedComment();\r\n        }\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKey);\r\n    editor.on('destroy', () => window.removeEventListener('keydown', handleKey));\r\n\r\n    editor.on('addcomment', ({ type, text, nodes, position }) => {\r\n        if (type === 'inline') {\r\n            manager.addInlineComment(text, position);\r\n        } else if (type === 'frame') {\r\n            const { left, top, width, height } = nodesBBox(editor, nodes, margin);\r\n            const ids = nodes.map(n => n.id);\r\n        \r\n            manager.addFrameComment(text, position || [ left, top ], ids, width, height);\r\n        } else {\r\n            throw new Error(`type '${type}' not supported`);\r\n        }\r\n    })\r\n\r\n    editor.on('removecomment', ({ comment, type }) => {\r\n        if (comment) {\r\n            manager.deleteComment(comment)\r\n        } else if (type === 'inline') {\r\n            manager.comments\r\n                .filter(c => c instanceof InlineComment)\r\n                .map(c => manager.deleteComment(c))\r\n        } else if (type === 'frame') {\r\n            manager.comments\r\n                .filter(c => c instanceof FrameComment)\r\n                .map(c => manager.deleteComment(c))\r\n        }\r\n    });\r\n\r\n    editor.on('syncframes', () => {\r\n        manager.comments\r\n            .filter(comment => comment instanceof FrameComment)\r\n            .map(comment => {\r\n                const nodes = comment.links.map(id => editor.nodes.find(n => n.id === id));\r\n                const { left, top, width, height } = nodesBBox(editor, nodes, margin);\r\n\r\n                comment.x = left;\r\n                comment.y = top;\r\n                comment.width = width;\r\n                comment.height = height;\r\n                \r\n                comment.update()\r\n            });\r\n    })\r\n\r\n    editor.on('nodetranslated', ({ node, prev }) => {\r\n        const dx = node.position[0] - prev[0];\r\n        const dy = node.position[1] - prev[1];\r\n\r\n        manager.comments\r\n            .filter(comment => comment instanceof InlineComment)\r\n            .filter(comment => comment.linkedTo(node))\r\n            .map(comment => comment.offset(dx, dy));\r\n    });\r\n\r\n    editor.on('nodedraged', node => {\r\n        manager.comments\r\n            .filter(comment => comment instanceof FrameComment)\r\n            .filter(comment => {\r\n                const contains = comment.isContains(node);\r\n                const links = comment.links.filter(id => id !== node.id);\r\n\r\n                comment.links = contains ? [...links, node.id] : links;\r\n            });\r\n    });\r\n\r\n    editor.on('commentselected', () => {\r\n        const list = [...editor.selected.list];\r\n\r\n        editor.selected.clear();\r\n        list.map(node => node.update ? node.update() : null);\r\n    })\r\n\r\n    editor.on('export', data => {\r\n        data.comments = manager.toJSON();\r\n    });\r\n\r\n    editor.on('import', data => {\r\n        manager.fromJSON(data.comments || []);\r\n    });\r\n\r\n    if (editor.exist('clear')) { // compatibility with previous versions\r\n        editor.on('clear', () => manager.deleteComments())\r\n    }\r\n\r\n    editor.on('destroy', () => manager.destroy());\r\n}\r\n\r\nexport default {\r\n    name: 'comment',\r\n    install\r\n}"],"names":["Draggable","el","onStart","onTranslate","onDrag","mouseStart","initEvents","addEventListener","this","down","bind","windowListenGuard","type","listener","window","removeEventListener","onDestroy","move","up","e","props","touches","pageX","pageY","stopPropagation","getCoords","preventDefault","x","y","delta","zoom","getBoundingClientRect","width","offsetWidth","forEach","cb","Comment","text","editor","scale","dragPosition","links","initView","update","document","createElement","tabIndex","onContextMenu","onFocus","onBlur","draggable","_this","dx","dy","ids","node","includes","id","trigger","Math","max","k","activeElement","blur","innerText","style","transform","position","destroy","min","arr","length","nodesBBox","nodes","margin","left","map","top","right","view","get","clientWidth","bottom","clientHeight","abs","height","getCenter","FrameComment","className","_this2","find","n","linkedNodesView","nodeView","r1","r2","commRect","InlineComment","intersection","getIntersectNode","linkTo","Array","from","rect","CommentManager","comments","on","c","call","comment","area","addComment","push","appendChild","removeChild","splice","indexOf","focused","deleteComment","_this3","toJSON","list","deleteComments","item","_this4","addFrameComment","addInlineComment","name","install","disableBuiltInEdit","manager","handleKey","code","shiftKey","selected","Object","values","mouse","deleteFocusedComment","prompt","Error","filter","prev","linkedTo","offset","contains","isContains","clear","data","fromJSON","exist"],"mappings":"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"}